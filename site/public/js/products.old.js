/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/components/products.old.js":
/*!*************************************************!*\
  !*** ./resources/js/components/products.old.js ***!
  \*************************************************/
/***/ (() => {

eval("document.addEventListener(\"DOMContentLoaded\", function () {\n  var priceBlock = document.querySelector(\"[data-js=price]\");\n  function updateTotalPriceHtml(price) {\n    priceBlock.innerHTML = price;\n  }\n  function updateTotalPrice(data) {\n    var onload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var formData = new FormData();\n    formData.append(\"product-id\", data.productId);\n    formData.append(\"amount\", data.amount);\n    if (!data[\"amount\"]) action = \"remove\";else action = \"add\";\n    formData.append(\"_token\", csrf);\n    fetch(\"/basket/\".concat(action), {\n      method: \"POST\",\n      body: formData,\n      widthCredentials: true\n    }).then(function (r) {\n      return r.json();\n    }).then(function (response) {\n      if (response.price) {\n        updateTotalPriceHtml(response.price);\n      }\n    });\n  }\n  document.addEventListener(\"click\", function (clickEvent) {\n    var selectedOption = clickEvent.target.closest(\".option\");\n    var isOption = selectedOption ? true : false;\n    if (!isOption) return;\n    var counter = selectedOption.closest(\".count\");\n    var optionType = selectedOption.getAttribute(\"data-option-type\");\n    var input = counter.querySelector(\".value\");\n    var product = clickEvent.target.closest(\"[data-js=product]\");\n    var inCart = product.querySelector(\".in\");\n    var notInCart = product.querySelector(\".not-in\");\n    if (optionType === \"+\") {\n      input.value++;\n    } else if (optionType === \"-\" && input.value > 1) {\n      input.value--;\n    }\n    updateTotalPrice({\n      productId: product.getAttribute(\"data-id\"),\n      amount: input.value\n    });\n    inCart.classList.remove(\"hidden\");\n    notInCart.classList.add(\"hidden\");\n  });\n  document.addEventListener(\"click\", function (clickEvent) {\n    var target = clickEvent.target.closest(\"[data-js=togglable]\");\n    // if (target.dataset.js !== \"togglable\") return\n    if (!target) return;\n    var wrapper = target.closest(\".cart-wrapper\");\n    var product = target.closest(\"[data-js=product]\");\n    if (!product) {\n      console.error(\"Product block is not found\");\n      return;\n    }\n    if (!wrapper) return;\n    var inCart = wrapper.querySelector(\".in\");\n    var notInCart = wrapper.querySelector(\".not-in\");\n    if (target.classList.contains(\"not-in\")) {\n      action = \"add\";\n    } else {\n      action = \"remove\";\n    }\n    var productID = target.dataset.id;\n    var data = new FormData();\n    data.append(\"product-id\", productID);\n    data.append(\"_token\", csrf);\n    if (action === \"add\") {\n      var amount = product.querySelector(\"[name=count]\").value;\n      data.append(\"amount\", amount);\n    }\n    var request = new XMLHttpRequest();\n    request.onload = function () {\n      var response = null;\n      try {\n        response = JSON.parse(request.responseText);\n      } catch (e) {\n        console.error(e);\n        return;\n      }\n      if (!response.status) return;\n      if (response.price) {\n        updateTotalPriceHtml(response.price);\n      }\n      inCart.classList.toggle(\"hidden\");\n      notInCart.classList.toggle(\"hidden\");\n    };\n    request.open(\"POST\", \"/basket/\".concat(action));\n    request.send(data);\n  });\n  document.addEventListener(\"click\", function (clickEvent) {\n    var target = clickEvent.target;\n    if (target.dataset.js !== \"removable\") return;\n    var productContainer = target.closest(\"[data-js=product-container]\");\n    var productID = target.dataset.id;\n    var data = new FormData();\n    data.append(\"product-id\", productID);\n    data.append(\"_token\", csrf);\n    var request = new XMLHttpRequest();\n    request.onload = function () {\n      var response = null;\n      try {\n        response = JSON.parse(request.responseText);\n      } catch (e) {\n        console.error(e);\n        return;\n      }\n      if (!response.status) return;\n      if (response.price) {\n        updatePrice(response.price);\n      }\n      if (!productContainer) {\n        console.error(\"The product conainter isn't found\");\n        return;\n      }\n      productContainer.remove();\n    };\n    request.open(\"POST\", \"/basket/remove\");\n    request.send(data);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/products.old.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/components/products.old.js"]();
/******/ 	
/******/ })()
;